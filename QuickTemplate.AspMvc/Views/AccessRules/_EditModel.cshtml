@*@CodeCopy*@
@*#if ACCESSRULES_ON*@@*
@model QuickTemplate.AspMvc.Models.Account.AccessRule
<style>
    .row {
        margin-top: 2px;
        margin-bottom: 2px;
    }

    h3 {
        margin-top: 20px;
    }
</style>

<div class="row">
    <div class="col-md-4">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input asp-for="Id" type="hidden" />
        <div class="form-group">
            <label asp-for="Type" class="control-label"></label>
            @{
                var valuesRuleTypes = Enum.GetValues(typeof(QuickTemplate.Logic.Modules.Account.RuleType)).Cast<QuickTemplate.Logic.Modules.Account.RuleType>().Select(e => new SelectListItem(e.ToString(), e.ToString()));
            }
            @Html.DropDownListFor(m => m.Type, valuesRuleTypes, null, new { @class = "form-select" })
        </div>
        <div class="form-group">
            <label asp-for="EntityType" class="control-label"></label>
            <input asp-for="EntityType" class="form-control" />
            <span asp-validation-for="EntityType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="RelationshipEntityType" class="control-label"></label>
            <input asp-for="RelationshipEntityType" class="form-control" />
            <span asp-validation-for="RelationshipEntityType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="PropertyName" class="control-label"></label>
            <input asp-for="PropertyName" class="form-control" />
            <span asp-validation-for="PropertyName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="EntityValue" class="control-label"></label>
            <input asp-for="EntityValue" class="form-control" />
            <span asp-validation-for="EntityValue" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="AccessType" class="control-label"></label>
            @{
                var valuesAccessTypes = Enum.GetValues(typeof(QuickTemplate.Logic.Modules.Account.AccessType)).Cast<QuickTemplate.Logic.Modules.Account.AccessType>().Select(e => new SelectListItem(e.ToString(), e.ToString()));
            }
            @Html.DropDownListFor(m => m.AccessType, valuesAccessTypes, null, new { @class = "form-select" })
        </div>
        <div class="form-group">
            <label asp-for="AccessValue" class="control-label"></label>
            <input asp-for="AccessValue" class="form-control" />
            <span asp-validation-for="AccessValue" class="text-danger"></span>
        </div>
        <p></p>
        <div class="form-group">
            <label asp-for="Creatable" class="control-label" style="min-width: 8em;"></label>
            @Html.CheckBoxFor(m => m.Creatable, new { @class = "form-check-input" })
        </div>
        <div class="form-group">
            <label asp-for="Updatable" class="control-label" style="min-width: 8em;"></label>
            @Html.CheckBoxFor(m => m.Updatable, new { @class = "form-check-input" })
        </div>
        <div class="form-group">
            <label asp-for="Readable" class="control-label" style="min-width: 8em;"></label>
            @Html.CheckBoxFor(m => m.Readable, new { @class = "form-check-input" })
        </div>
        <div class="form-group">
            <label asp-for="Deletable" class="control-label" style="min-width: 8em;"></label>
            @Html.CheckBoxFor(m => m.Deletable, new { @class = "form-check-input" })
        </div>
        <div class="form-group">
            <label asp-for="Viewable" class="control-label" style="min-width: 8em;"></label>
            @Html.CheckBoxFor(m => m.Viewable, new { @class = "form-check-input" })
        </div>
    </div>
</div>
*@@*#endif*@
